import { useEffect } from "react";
import { useDispatch, useSelector } from "react-redux";
import { getAllPlants } from "../../../store/thunk/plantsThunk";

import saleBanner from "../../../assets/img/Super_Sale_Banner.jpg"
import styles from "./styles-home/home.module.css";

function CategoryMenu({ activeCategory, setActiveCategory, activeSize, setActiveSize }) {
    const dispatch = useDispatch();

    useEffect(() => {
        dispatch(getAllPlants());
    }, [dispatch]);

    const { categoriesCount, sizePlantsCount } = useSelector(state => state.plants);

    const categoriesArray = Object.entries(categoriesCount)
        .map(([category, count]) => ({ category, count }));

    const sizeArray = Object.entries(sizePlantsCount)
        .map(([size, count]) => ({ size, count }));

    return (
        <>
        <div className={styles.menu_categories}>
            <h4 className={styles.title_categories}>Categories</h4>
            <ul className={styles.list_categories}>
                {categoriesArray.map(({ category, count }) => (
                    <li className={styles.list_categories_item} key={category}>
                        <button
                            className={`${styles.button_item} ${activeCategory === category ? styles.active : ""}`}
                            onClick={() => {
                                setActiveCategory( prev => prev === category ? null : category)} //—è–∫—â–æ —ñ–¥–µ –¥—Ä—É–≥–∏–π –∫–ª—ñ–∫ –ø–æ –≤–∏–±—Ä–∞–Ω–æ—ó –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ —Ç–æ –º–∏ —Ä–æ–±–∏–º–æ —Å–±—Ä–æ—Å –¥–æ –Ω–∞–ª–ª
                            }
                        >
                            <span className={styles.label}>{category}</span>
                            <span className={styles.count}>({count})</span>
                        </button>
                    </li>
                ))}
            </ul>
            <h4 className={styles.title_size}>Size</h4>
            <ul className={styles.list_size}>
                {sizeArray.map(({ size, count }) => (
                    <li className={styles.list_size_item} key={size}>
                        <button
                            className={`${styles.button_item} ${activeSize === size ? styles.active : ""}`}
                            onClick={() => {
                                setActiveSize(prev => prev === size ? null : size)} //—è–∫—â–æ —ñ–¥–µ –¥—Ä—É–≥–∏–π –∫–ª—ñ–∫ –ø–æ –≤–∏–±—Ä–∞–Ω–æ—ó –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ —Ç–æ –º–∏ —Ä–æ–±–∏–º–æ —Å–±—Ä–æ—Å –¥–æ –Ω–∞–ª–ª
                            } 
                        >
                            <span className={styles.label}>{size}</span>
                            <span className={styles.count}>({count})</span>
                        </button>
                    </li>
                ))}
            </ul>
             <a href="#">
                  <img src={saleBanner} alt="sale-banner" />
            </a>
        </div>
        </>
    );
}

export default CategoryMenu;













// import { useEffect, useState } from "react";
// import { useDispatch, useSelector } from "react-redux";
// import styles from "./styles-home/home.module.css";
// import { getAllPlants } from "../../../store/thunk/plantsThunk";

// function CategoryMenu() {
//     const [activeCategory, setActiveCategory] = useState(null);
//     const [activeSize , setActiveSize] = useState(null);

//     const dispatch = useDispatch()

//     useEffect(() => {
//         dispatch(getAllPlants())
//     }, [dispatch])

//     const { categoriesCount, sizePlantsCount } = useSelector(state => state.plants);
//     console.log(categoriesCount)
//     console.log(sizePlantsCount)

//     const categoriesArray = Object.entries(categoriesCount)
//         .map(([category, count]) => ({
//             category,
//             count
//         }));
//     const sizeArray = Object.entries(sizePlantsCount)
//         .map(([size, count]) => ({
//             size,
//             count
//         }));
//     console.log(sizeArray)


//     return (
//         <>
//             <div className={styles.menu_categories}>
//                 <h4 className={styles.title_categories}>Categories</h4>
//                 <ul className={styles.list_categories}>
//                     {categoriesArray.map(({ category, count }) => (
//                         <li className={styles.list_categories_item} key={category}>
//                             <button className={`${styles.button_item} ${activeCategory === category ? styles.active : ""}`}
//                                 onClick={() => setActiveCategory(category) }
//                             >
//                                 <span className={styles.label}>{category}</span>
//                                 <span className={styles.count}>({count})</span>
//                             </button>
//                         </li>
//                     ))}
//             </ul>
//             <h4 className={styles.title_size}>Size</h4>
//             <ul className={styles.list_size}>
//                 {sizeArray.map(({ size, count }) => (
//                     <li className={styles.list_size_item} key={size}>
//                         <button className={`${styles.button_item} ${activeSize === size ? styles.active : ""}`}
//                                 onClick={() => setActiveSize(size) }
//                             >
//                                 <span className={styles.label}>{size}</span>
//                                 <span className={styles.count}>({count})</span>
//                             </button>
//                     </li>
//                 ))}
//             </ul>
//         </div >
//         </>
//     )
// }
// export default CategoryMenu



















// üí° –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –±–µ—Ä—ë—Ç –æ–±—ä–µ–∫—Ç categoriesCount –∏ –ø—Ä–µ–≤—Ä–∞—â–∞–µ—Ç –µ–≥–æ –≤ –º–∞—Å—Å–∏–≤ –ø–∞—Ä [–∫–ª—é—á, –∑–Ω–∞—á–µ–Ω–∏–µ].

// –ü—Ä–∏–º–µ—Ä:

// js
// const categoriesCount = {
//   "House Plants": 2,
//   "Seeds": 1,
//   "Small Plants": 5
// };
// –ü–æ—Å–ª–µ Object.entries(categoriesCount) —Ç—ã –ø–æ–ª—É—á–∏—à—å:

// js
// [
//   ["House Plants", 2],
//   ["Seeds", 1],
//   ["Small Plants", 5]
// ]
// 2. .map(([category, count]) => ({ category, count }))
// ‚úÖ –ú–µ—Ç–æ–¥ .map() –ø—Ä–æ—Ö–æ–¥–∏—Ç –ø–æ –∫–∞–∂–¥–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É –º–∞—Å—Å–∏–≤–∞ (—Ç.–µ. –ø–æ –∫–∞–∂–¥–æ–π –ø–∞—Ä–µ [–∫–ª—é—á, –∑–Ω–∞—á–µ–Ω–∏–µ]).

// –í–Ω—É—Ç—Ä–∏ map –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—è –º–∞—Å—Å–∏–≤–∞: [category, count] –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ category = –∫–ª—é—á, –∞ count = –∑–Ω–∞—á–µ–Ω–∏–µ.

// –ó–∞—Ç–µ–º –æ–Ω –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç:

// js
// {
//   category: "House Plants",
//   count: 2
// }
// –ò —Ç–∞–∫ –¥–ª—è –∫–∞–∂–¥–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ‚Äî —Å–æ–∑–¥–∞—ë—Ç—Å—è –º–∞—Å—Å–∏–≤ —Ç–∞–∫–∏—Ö –æ–±—ä–µ–∫—Ç–æ–≤.

// üíæ –í –∏—Ç–æ–≥–µ categoriesArray –±—É–¥–µ—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å —Ç–∞–∫:
// js
// [
//   { category: "House Plants", count: 2 },
//   { category: "Seeds", count: 1 },
//   { category: "Small Plants", count: 5 }
// ]